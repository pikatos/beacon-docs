(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{120:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(7),o=(n(0),n(212)),r=n(261),s={title:"Getting Started",slug:"/"},c={unversionedId:"introduction/introduction",id:"introduction/introduction",isDocsHomePage:!1,title:"Getting Started",description:"Learn About Beacon",source:"@site/docs/introduction/introduction.mdx",slug:"/",permalink:"/",editUrl:"https://github.com/airgap-it/beacon-docs/edit/main/src/docs/introduction/introduction.mdx",version:"current",sidebar:"docs",next:{title:"Contributing",permalink:"/contributing"}},l=[{value:"Learn About Beacon",id:"learn-about-beacon",children:[{value:"Design Principles",id:"design-principles",children:[]},{value:"Messages",id:"messages",children:[]},{value:"Errors",id:"errors",children:[]},{value:"Default UI Elements",id:"default-ui-elements",children:[]}]}],d={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{class:"container padding-horiz--none margin-vert--md"},Object(o.b)("div",{class:"row row--no-gutters"},Object(o.b)("div",{class:"col col--3 margin-right--md"},Object(o.b)("a",{href:"/getting-started/first-dapp"},Object(o.b)("img",{alt:"Hello World",src:Object(r.a)("/img/hello-world.svg")}))),Object(o.b)("div",{class:"col col--3"},Object(o.b)("a",{href:"/guides/active-account"},Object(o.b)("img",{alt:"Guides",src:Object(r.a)("/img/guides.svg")}))))),Object(o.b)("h2",{id:"learn-about-beacon"},"Learn About Beacon"),Object(o.b)("p",null,"Beacon is the implementation of the ",Object(o.b)("a",{parentName:"p",href:"https://gitlab.com/tzip/tzip/tree/master/proposals/tzip-10"},"tzip-10 proposal"),", which describes an interaction standard between a wallet and a dApp."),Object(o.b)("p",null,"A dApp impelementing the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/airgap-it/beacon-sdk"},"beacon-sdk")," can build up a channel and send messages over a peer to peer communication layer to a wallet. This allows for a communication for example of a mobile wallet with a desktop application. The requests of the dApp are sent to the wallet, signed and returned to the application. The ",Object(o.b)("inlineCode",{parentName:"p"},"beacon-sdk")," can also communicate to chrome extensions if compatible ones are installed."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"beacon-sdk")," should allow developers to integrate this functionality with minimal coding, but still be customizable to support more complex flows."),Object(o.b)("h3",{id:"design-principles"},"Design Principles"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"beacon-sdk")," handles almost everything for you, but is still customizable if needed.\nIt detects whether or not a browser extension is installed, tracks what connections have been established and the accounts that have been shared with the dApp."),Object(o.b)("p",null,"Generally, you only have to initialize a DAppClient instance (see ",Object(o.b)("a",{parentName:"p",href:"/getting-started/simple-example"},"Getting Started"),"), the rest should be handled for you.\nRefer to the ",Object(o.b)("a",{parentName:"p",href:"/guides/active-account"},"guides")," section for some common use cases."),Object(o.b)("h3",{id:"messages"},"Messages"),Object(o.b)("p",null,"The messages used in the Beacon communication are defined in the ",Object(o.b)("a",{parentName:"p",href:"https://gitlab.com/tzip/tzip/tree/master/proposals/tzip-10"},"tzip-10 proposal"),"."),Object(o.b)("p",null,"Every message contains a unique, random ID that allows use to match request and response. It also contains the ID of the sender."),Object(o.b)("p",null,"Some of the messages accept a network as input (default is mainnet). This is used to ask for permissions or broadcast a transaction on another network. This can either be a testnet, or a local development setup."),Object(o.b)("p",null,"To see all message types, please refer to the ",Object(o.b)("a",{parentName:"p",href:"https://typedocs.walletbeacon.io/enums/beaconmessagetype.html"},"typedocs"),"."),Object(o.b)("h3",{id:"errors"},"Errors"),Object(o.b)("p",null,"The errors used in the Beacon communication are defined in the ",Object(o.b)("a",{parentName:"p",href:"https://gitlab.com/tzip/tzip/tree/master/proposals/tzip-10"},"tzip-10 proposal"),"."),Object(o.b)("p",null,"If the wallet encounters an error while processing a request, the response will return an error."),Object(o.b)("p",null,"To see all error types, please refer to the ",Object(o.b)("a",{parentName:"p",href:"https://typedocs.walletbeacon.io/enums/beaconerrortype.html"},"typedocs"),"."),Object(o.b)("h3",{id:"default-ui-elements"},"Default UI Elements"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"beacon-sdk")," includes default UI elements for pairing wallets and show the status of a request.\n",Object(o.b)("strong",{parentName:"p"},"We highly discourage the overwriting of the default UI elements."),"\nYou can read more details about this in the ",Object(o.b)("a",{parentName:"p",href:"/advanced/ui-elements"},"UI Elements")," section."))}p.isMDXComponent=!0},261:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return r}));var a=n(16),i=n(314);function o(){var e=Object(a.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var o=void 0===a?{}:a,r=o.forcePrependBaseUrl,s=void 0!==r&&r,c=o.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if(Object(i.b)(n))return n;if(s)return t+n;var d=n.startsWith(t)?n:t+n.replace(/^\//,"");return l?e+d:d}(o,n,e,t)}}}function r(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},314:function(e,t,n){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!a(e)}n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return i}))}}]);